<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd      http://www.springframework.org/schema/context         http://www.springframework.org/schema/context/spring-context.xsd          http://www.springframework.org/schema/tx          http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <camelContext id="MainRoutes" xmlns="http://camel.apache.org/schema/spring">
        <!-- <restConfiguration bindingMode="json" component="cxf"/>
		<rest path="validateUser11">
			<post>
				<to uri="direct:ValidateUser" />
			</post>
		</rest> -->
        <route id="AuthGateway">
            <from id="AuthGateway" uri="cxfrs://bean://apiSecureEndpoint"/>
            <onException id="_onException1">
                <exception>java.lang.Exception</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <log id="_log1" message="OnException invoked exception = ${exception}"/>
                <log id="_log2" message="OnException invoked headers = ${headers}"/>
                <log id="_log3" message="OnException invoked body = ${body}"/>
            </onException>
            <setProperty id="_setProperty1" propertyName="SERVICE_OPERATION_NAME">
                <simple>${header.operationName}</simple>
            </setProperty>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${exchangeProperty.SERVICE_OPERATION_NAME} == 'ValidateUser1'</simple>
                    <to id="_to1" uri="direct:ValidateUser"/>
                </when>
                <when id="_when2">
                    <simple>${exchangeProperty.SERVICE_OPERATION_NAME} == 'getUsers'</simple>
                    <to id="_to2" uri="direct:GetUsers"/>
                </when>
                <when id="_when3">
                    <simple>${exchangeProperty.SERVICE_OPERATION_NAME} == 'getUserByID'</simple>
                    <to id="_to3" uri="direct:GetUserByID"/>
                </when>
                <when id="_when4">
                    <simple>${exchangeProperty.SERVICE_OPERATION_NAME} == 'createUser'</simple>
                    <to id="_to4" uri="direct:CreateUser"/>
                </when>
                <when id="_when5">
                    <simple>${exchangeProperty.SERVICE_OPERATION_NAME} == 'editUser'</simple>
                    <to id="_to5" uri="direct:EditUser"/>
                </when>
                <when id="_when6">
                    <simple>${exchangeProperty.SERVICE_OPERATION_NAME} == 'deleteUser'</simple>
                    <to id="_to6" uri="direct:DeleteUser"/>
                </when>
            </choice>
        </route>
        <route id="ValidateUser">
            <from id="_from3" uri="direct:ValidateUser"/>
            <bean id="_bean1" method="getIsAvailableRequest" ref="validateUserService"/>
        </route>
        <route id="GetUsers">
            <from id="_from4" uri="direct:GetUsers"/>
            <bean id="_bean2" method="getUsers" ref="validateUserService"/>
        </route>
        <route id="GetUserByID">
            <from id="_from5" uri="direct:GetUserByID"/>
            <bean id="_bean3" method="getUserByID" ref="validateUserService"/>
        </route>
        <route id="CreateUser">
            <from id="_from6" uri="direct:CreateUser"/>
            <bean id="_bean4" method="createUser" ref="validateUserService"/>
        </route>
        <route id="EditUser">
            <from id="_from7" uri="direct:EditUser"/>
            <bean id="_bean5" method="editUser" ref="validateUserService"/>
        </route>
        <route id="DeleteUser">
            <from id="_from8" uri="direct:DeleteUser"/>
            <bean id="_bean6" method="deleteUser" ref="validateUserService"/>
        </route>
    </camelContext>
    <cxf:rsServer address="${endpoint.api.main}" id="apiSecureEndpoint"
        loggingFeatureEnabled="true" serviceClass="com.singlife.validateuser.restInterface.Interfaces">
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsServer>
    <bean
        class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer" id="bridgePropertyPlaceholder">
        <property name="locations">
            <list>
                <value>classpath:validateUser.properties</value>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>
    <bean
        class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>
    <bean
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>com</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!-- <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->
            </props>
        </property>
    </bean>
    <bean
        class="org.springframework.orm.hibernate4.HibernateTransactionManager" id="transactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
</beans>
